#include<bits/stdc++.h>
using namespace std;
void addedge(vector<vector<int>> &a,int u,int v,int w)
{
	a.push_back({u,v,w}) ;
}

int find(vector<int> &parent,int a)
{
	if(parent[a]==-1)
		return a;
	parent[a]=find(parent,parent[a]);
	return(parent[a]);
} 

void uni(vector<int> &parent,vector<int> &rank,int x,int y)
{ 
	int s1=find(parent,x);
	int s2=find(parent,y);
	if(s1!=s2)
	{
		if(rank[s1]<rank[s2])
		{
			parent[s1]=s2;
			rank[s2]+=rank[s1];
		} 
		else
		{
			parent[s2]=s1;
			rank[s1]+=rank[s2];
		}
	}
} 

void krushkal(vector<vector<int>> &a,int n)
{
	vector<int>parent(n,-1);
	vector<int>rank(n,1);
	sort(a.begin(),a.end());
	int ans=0;
	cout << "Following are the edges in the "
                "constructed MST"
             << endl;
	for(auto it: a)
	{
		int x=it[0];
		int y=it[1];
		int w=it[2]; 
		if(find(parent,x)!=find(parent,y))
		{
			uni(parent,rank,x,y);
			cout << x << " -- " << y << " == " << w
                     << endl;
			ans+=w;
		}
	} 
	cout<<"Min Cost= "<<ans<<endl;
}

int main()
{ 
	int n,s;
	cout<<"Enter the number of vertices:";
	cin>>n;
	vector<vector<int>>a;
	addedge(a,0,1,10);
	addedge(a,1,3,15);
	addedge(a,2,3,4);
	addedge(a,2,0,6);
	addedge(a,0,3,5);
	krushkal(a,n);
	return 0;
}
